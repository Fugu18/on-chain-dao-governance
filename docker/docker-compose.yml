version: '3.5'

services:
  governance-db:
    container_name: ${COMPOSE_PROJECT_NAME}-governance-db
    image: postgres:14.10-alpine
    shm_size: 256m
    ports:
      - ${GOVERNANCE_DB_PORT}:5432
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=${GOVERNANCE_DB}
      - POSTGRES_USER=${GOVERNANCE_DB_USER}
      - POSTGRES_PASSWORD=${GOVERNANCE_DB_PASSWORD}
    volumes:
      - ${DATA_PATH}/governance-db:/var/lib/postgresql/data
    restart: unless-stopped
    command:
      [
        'postgres',
        '-c',
        'log_statement=${POSTGRES_LOG_STATEMENT-none}',
        '-c',
        'log_duration=${POSTGRES_LOG_DURATION-off}',
      ]

  cardano-node:
    container_name: ${COMPOSE_PROJECT_NAME}-cardano-node
    image: ghcr.io/intersectmbo/cardano-node:8.7.3
    ports:
      - ${CARDANO_NODE_PORT}:3001
    volumes:
      - ${DATA_PATH}/node-db:/data/db
      - ${DATA_PATH}/node-ipc:/ipc
      - ../cardano-configurations/network/${NETWORK}:/configs
    command: 'run --port 3001 --config /configs/cardano-node/config.json --database-path /data/db --topology /configs/cardano-node/topology.json --socket-path /ipc/node.socket --host-addr 0.0.0.0'
    restart: unless-stopped

  ogmios:
    image: cardanosolutions/ogmios:v6.0.0
    depends_on:
      - cardano-node
    command:
      [
        '--host',
        '0.0.0.0',
        '--node-socket',
        '/ipc/node.socket',
        '--node-config',
        '/configs/cardano-node/config.json',
      ]
    volumes:
      - ../cardano-configurations/network/${NETWORK}:/configs
      - ${DATA_PATH}/node-ipc:/ipc
    ports:
      - ${OGMIOS_PORT:-1337}:1337 # CONTAINER PORT MUST BE 1337
    restart: on-failure

  kupo:
    image: cardanosolutions/kupo:v2.7.2
    depends_on:
      - cardano-node
    ports:
      - ${KUPO_PORT}:1442
    command: [
        # when trying with ogmios - ChainSyncFailedToConnectOrConnectionLost
        '--node-socket',
        '/ipc/node.socket',
        '--node-config',
        '/configs/cardano-node/config.json',
        '--match',
        '${GOVERNANCE_TOKEN_POLICY_ID}.${GOVERNANCE_TOKEN_ASSET_NAME}',
        '--since',
        '${KUPO_SINCE_SLOT}.${KUPO_SINCE_HEADER_HASH}',
        '--workdir',
        '/kupo-db',
        '--defer-db-indexes',
        '--host',
        '0.0.0.0',
      ]
    volumes:
      - ../cardano-configurations/network/${NETWORK}:/configs
      - ${DATA_PATH}/node-ipc:/ipc
      - ${DATA_PATH}/kupo-db:/kupo-db
  governance-server:
    container_name: ${COMPOSE_PROJECT_NAME}-governance-server
    depends_on:
      - cardano-node
      - ogmios
      - governance-db
    build:
      context: ../
      dockerfile: backend/Dockerfile
    ports:
      - ${GOVERNANCE_SERVER_PORT}:3240
    environment:
      name: ${COMPOSE_PROJECT_NAME}-governance-server
      AGGREGATOR_PORT: ${GOVERNANCE_AGGREGATOR_PORT}
      SERVER_PORT: ${GOVERNANCE_SERVER_PORT}
      NODE_ENV: production
      OGMIOS_HOST: ${OGMIOS_HOST:-ogmios}
      NETWORK_NAME: ${NETWORK}
      SYNC_EARLIEST_SLOT: ${GOVERNANCE_SYNC_EARLIEST_SLOT}
      SYNC_EARLIEST_HASH: ${GOVERNANCE_SYNC_EARLIEST_HASH}
      GOVERNANCE_DB: ${GOVERNANCE_DB}
      GOVERNANCE_DB_HOST: governance-db
      GOVERNANCE_DB_USER: ${GOVERNANCE_DB_USER}
      GOVERNANCE_DB_PASSWORD: ${GOVERNANCE_DB_PASSWORD}
      GOVERNANCE_DB_PORT: ${GOVERNANCE_DB_PORT}
      GOVERNANCE_DB_SCHEMA: ${GOVERNANCE_DB_SCHEMA}
      HTTP_SERVER_KEEP_ALIVE_SECONDS: ${HTTP_SERVER_KEEP_ALIVE_SECONDS}
      GOVERNANCE_TOKEN_POLICY_ID: ${GOVERNANCE_TOKEN_POLICY_ID}
      GOVERNANCE_TOKEN_ASSET_NAME: ${GOVERNANCE_TOKEN_ASSET_NAME}
      TOTAL_MINTED_GOVERNANCE_TOKENS: ${TOTAL_MINTED_GOVERNANCE_TOKENS}
      PROPOSALS_WALLET_PUBKEYHASH: ${PROPOSALS_WALLET_PUBKEYHASH}
      PROPOSALS_WALLET_STAKEKEYHASH: ${PROPOSALS_WALLET_STAKEKEYHASH}
      PROPOSAL_COLLATERAL_QUANTITY: ${PROPOSAL_COLLATERAL_QUANTITY}
      KUPO_URL: http://localhost:${KUPO_PORT}
      MODE: server
    restart: unless-stopped
  governance-aggregator:
    container_name: ${COMPOSE_PROJECT_NAME}-governance-aggregator
    depends_on:
      - cardano-node
      - ogmios
      - governance-db
    build:
      context: ../
      dockerfile: backend/Dockerfile
    ports:
      - ${GOVERNANCE_AGGREGATOR_PORT}:3241
    environment:
      name: ${COMPOSE_PROJECT_NAME}-governance-aggregator
      AGGREGATOR_PORT: ${GOVERNANCE_AGGREGATOR_PORT}
      SERVER_PORT: ${GOVERNANCE_SERVER_PORT}
      NODE_ENV: production
      OGMIOS_HOST: ${OGMIOS_HOST:-ogmios}
      NETWORK_NAME: ${NETWORK}
      SYNC_EARLIEST_SLOT: ${GOVERNANCE_SYNC_EARLIEST_SLOT}
      SYNC_EARLIEST_HASH: ${GOVERNANCE_SYNC_EARLIEST_HASH}
      GOVERNANCE_DB: ${GOVERNANCE_DB}
      GOVERNANCE_DB_HOST: governance-db
      GOVERNANCE_DB_USER: ${GOVERNANCE_DB_USER}
      GOVERNANCE_DB_PASSWORD: ${GOVERNANCE_DB_PASSWORD}
      GOVERNANCE_DB_PORT: ${GOVERNANCE_DB_PORT}
      GOVERNANCE_DB_SCHEMA: ${GOVERNANCE_DB_SCHEMA}
      HTTP_SERVER_KEEP_ALIVE_SECONDS: ${HTTP_SERVER_KEEP_ALIVE_SECONDS}
      GOVERNANCE_TOKEN_POLICY_ID: ${GOVERNANCE_TOKEN_POLICY_ID}
      GOVERNANCE_TOKEN_ASSET_NAME: ${GOVERNANCE_TOKEN_ASSET_NAME}
      TOTAL_MINTED_GOVERNANCE_TOKENS: ${TOTAL_MINTED_GOVERNANCE_TOKENS}
      PROPOSALS_WALLET_PUBKEYHASH: ${PROPOSALS_WALLET_PUBKEYHASH}
      PROPOSALS_WALLET_STAKEKEYHASH: ${PROPOSALS_WALLET_STAKEKEYHASH}
      PROPOSAL_COLLATERAL_QUANTITY: ${PROPOSAL_COLLATERAL_QUANTITY}
      KUPO_URL: http://localhost:${KUPO_PORT}
      MODE: aggregator
    restart: unless-stopped

volumes:
  governance-db:
  node-db:
  node-ipc:
  kupo-db:
